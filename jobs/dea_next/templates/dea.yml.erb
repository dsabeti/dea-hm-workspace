---
nats_servers:
<%
  nats_config = nil
  if_link("nats") do |nats|
    nats_config = {}
    nats_config["machines"] = nats.p("nats.machines")
    nats_config["user"] = nats.p("nats.user")
    nats_config["password"] = nats.p("nats.password")
    nats_config["port"] = nats.p("nats.port")
  end

  nats_config = p("nats") unless nats_config
%>

<% nats_config["machines"].each do |address| %>
  - nats://<%= nats_config["user"] %>:<%= nats_config["password"] %>@<%= address %>:<%= nats_config["port"] %>
<% end %>

dea_ruby: /usr/bin/ruby

pid_filename: /var/vcap/sys/run/dea_next/dea_next.pid

base_dir: /var/vcap/data/dea_next

warden_socket: /var/vcap/data/warden/warden.sock

evacuation_bail_out_time_in_seconds: <%= p("dea_next.evacuation_bail_out_time_in_seconds") %>
default_health_check_timeout: <%= p("dea_next.default_health_check_timeout") %>
crash_lifetime_secs: <%= p("dea_next.crash_lifetime_secs") %>

directory_server:
  protocol: '<%= p('dea_next.directory_server_protocol') %>'
  v1_port: 12345
  v2_port: 32766
  file_api_port: 23456
  streaming_timeout: <%= p("dea_next.streaming_timeout") %>
  logging:
    file: /var/vcap/sys/log/dea_next/dir_server.log
    syslog: vcap.directory_server
    level: <%= p("dea_next.logging_level") %>

domain: <%= p("domain") %>

logging:
  file: /var/vcap/sys/log/dea_next/dea_next.log
  level: <%= p("dea_next.logging_level") %>
  syslog: vcap.dea_next

<% if_p("metron_endpoint.host", "metron_endpoint.port") do |host, port| %>
loggregator:
  router: <%= host %>:<%= port %>
<% end %>

index: <%= spec.index %>

intervals:
  heartbeat: <%= p("dea_next.heartbeat_interval_in_seconds") %>
  advertise: <%= p("dea_next.advertise_interval_in_seconds") %>
  router_register_in_seconds: <%= p("router.requested_route_registration_interval_in_seconds") %>

resources:
  memory_mb: <%= p("dea_next.memory_mb") %>
  memory_overcommit_factor: <%= p("dea_next.memory_overcommit_factor") %>
  disk_mb: <%= p("dea_next.disk_mb") %>
  disk_overcommit_factor: <%= p("dea_next.disk_overcommit_factor") %>

staging:
  enabled: true
  max_staging_duration: <%= p("dea_next.max_staging_duration") %>
  memory_limit_mb: <%= p("dea_next.staging_memory_limit_mb") %>
  disk_limit_mb: <%= p("dea_next.staging_disk_limit_mb") %>
  cpu_limit_shares: <%= p("dea_next.staging_cpu_limit_shares") %>
  disk_inode_limit: <%= p("dea_next.staging_disk_inode_limit") %>
<% if_p("dea_next.staging_bandwidth_limit.rate", "dea_next.staging_bandwidth_limit.burst") do |rate, burst| %>
  bandwidth_limit:
    rate: <%= rate %>
    burst: <%= burst %>
<% end %>

instance:
  memory_to_cpu_share_ratio: <%= p("dea_next.instance_memory_to_cpu_share_ratio") %>
  min_cpu_share_limit: <%= p("dea_next.instance_min_cpu_share_limit") %>
  max_cpu_share_limit: <%= p("dea_next.instance_max_cpu_share_limit") %>
  disk_inode_limit: <%= p("dea_next.instance_disk_inode_limit") %>
  nproc_limit: <%= p("dea_next.instance_nproc_limit") %>
<% if_p("dea_next.instance_bandwidth_limit.rate", "dea_next.instance_bandwidth_limit.burst") do |rate, burst| %>
  bandwidth_limit:
    rate: <%= rate %>
    burst: <%= burst %>
<% end %>

stacks: <%= p("dea_next.stacks", []).to_yaml.gsub("---", "") %>

placement_properties:
  zone: <%= p("dea_next.zone") %>

<%
  cc_url = URI.parse(p("cc.srv_api_uri"))
  cc_url.userinfo = "#{p("cc.internal_api_user")}:#{p("cc.internal_api_password")}"
%>
cc_url: <%= cc_url.to_s %>

<% if_p("dea_next.post_setup_hook") do |hook| %>
post_setup_hook: <%= hook %>
<% end %>
